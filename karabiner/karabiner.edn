{:profiles
 {:Default {:default true
            :alone 1000
            :held 500
            :delay 500
            :sim 250}}
 :templates {:alfred "osascript -e 'tell application id \"com.runningwithcrayons.Alfred\" to run trigger \"%s\" in workflow \"%s\" with argument \"%s\"'"
             :launch "osascript -e 'tell application \"Alfred 3\" to run trigger \"launch%s\" in workflow \"yqrashawn.workflow.launcher\" with argument \"%s\"'"
             :hs "/opt/homebrew/bin/hs -A -n -q -t 0.1 -c '%s'"
             :open "open -jga \"%s\""
             :run-shortcut "shortcuts run \"%s\""
             :set-active-space "/opt/homebrew/bin/hs -A -n -q -t 0.1 -c 'hs.spaces.setDefaultMCwaitTime(0.1);local function activate_space(space); local spaces = hs.spaces.allSpaces(); local existing_spaces = {}; for k, v in pairs(hs.spaces.allSpaces()) do; existing_spaces = v; end hs.spaces.gotoSpace(existing_spaces[space]); end activate_space(tonumber(\"%s\"))'"
             :togg "/opt/homebrew/bin/hs -A -n -q -t 0.1 -c '\nlocal appName = \"%s\";\nlocal x = hs.application.find(appName);\nif x and x:isFrontmost() then\n  x:hide();\nelse\n  hs.application.launchOrFocus(appName);\nend'"
             :toggle "osascript -e 'set appName to \"%s\"\nset startIt to false\ntell application \"System Events\"\n  if not (exists process appName) then\n    set startIt to true\n  else if frontmost of process appName then\n    set visible of process appName to false\n  else\n    set frontmost of process appName to true\n  end if\nend tell\nif startIt then\n  tell application appName to activate\nend if'"
             :toggle-tiling-wm "pgrep -f Amethyst HazeOver && pkill HazeOver Amethyst || (open -a Amethyst && open -a HazeOver)"
             :toggle-ide-by-preferred-order "/opt/homebrew/bin/hs -A -n -q -t 0.1 /Users/caiobep/.dotfiles/hammerspoon/toggle-ide-by-preferred-order.lua"
             :focus-window-on-right "/opt/homebrew/bin/hs -A -n -q -t 0.1 /Users/caiobep/.dotfiles/hammerspoon/move-focus-to-window-on-right.lua"
             :focus-window-on-left "/opt/homebrew/bin/hs -A -n -q -t 0.1 /Users/caiobep/.dotfiles/hammerspoon/move-focus-to-window-on-left.lua"
             :run-hammerspoon-script "/opt/homebrew/bin/hs -A -n -q -t 0.1 -c '%s'"
             :send-window-to-space "/opt/homebrew/bin/hs -A -n -q -t 0.1 -c 'hs.spaces.setDefaultMCwaitTime(0.1);local function send_window_to_space(space); local spaces = hs.spaces.allSpaces(); local existing_spaces = {}; for k, v in pairs(hs.spaces.allSpaces()) do; existing_spaces = v; end hs.spaces.moveWindowToSpace(hs.window.focusedWindow():id(), existing_spaces[space]); end send_window_to_space(tonumber(\"%s\"))'"
             :say "say \"%s\""}
 :applications {:IDEA ["^com\\.jetbrains\\.*"]
                :playwright ["*chromium*", "*playwright*"]
                :alacritty ["*alacritty*"]}

 :simlayers {:caps-mode {:key :caps_lock}
             :space-mode {:key :spacebar}
             :rshift-mode {:key :right_shift}
             :fn-mode {:apple_vendor_top_case_keyboard true
                       :key :fn}}

 :main [{:des "General mappings"
         :rules [[:right_option :!COS0]                  ; Invoke Paletro
                 [[:right_command :left_command] :!Cf16] ; Raycast AI
                 [[:right_command :right_option] :!Of16] ; Raycast AI
                 [[:right_command :left_option] :!Of16]  ; Raycast AI
                 [:!Sright_option :!CTSO0]               ; Invoke Contexts Window Search
                 [:##right_shift :!CTSO0]
                 [:##right_option :f19]
                 [:!SOj [:focus-window-on-left]]
                 [:!SOk [:focus-window-on-right]]
                 [:!OTS1 [:send-window-to-space "1"]]
                 [:!OTS2 [:send-window-to-space "2"]]
                 [:!OTS3 [:send-window-to-space "3"]]
                 [:!OTS4 [:send-window-to-space "4"]]
                 [[:j :l] :f17]]}

        ; {:des "left cmd -> cmd+tab"
        ;  :rules [[:left_option :left_option nil {:alone :!Ctab}]]}

        ;; List of special characters
        ;; !  | means mandatory
        ;; #  | means optional
        ;; C  | left_command
        ;; T  | left_control
        ;; O  | left_option
        ;; S  | left_shift
        ;; F  | fn
        ;; Q  | right_command
        ;; W  | right_control
        ;; E  | right_option
        ;; R  | right_shift
        ;; P  | caps_lock
        ;; !! | mandatory command + control + optional + shift (hyper)
        ;; ## | optional any

        ; {:des "Vim arrow keys"
        ;  :rules [:fn [[:j :down_arrow]
        ;               [:k :up_arrow]
        ;               [:l :right_arrow]
        ;               [:h :left_arrow]]]}

        {:des "Caps Mode"
         :rules [:caps-mode
                 [:1 :!CTSO1]                ; Activate space 1
                 [:2 :!CTSO2]                ; Activate space 2
                 [:3 :!CTSO3]                ; Activate space 3
                 [:4 :!CTSO4]                ; Activate space 4
                 [:5 :!CTSO5]                ; Activate space 5
                 [:k :!CTSOsemicolon]; Open Project
                 [:j :down_arrow]
                 ; [:l :right_arrow]
                 ; [:k :up_arrow]
                 [:open_bracket :!CTOSopen_bracket]
                 [:9 :!COST9]                ; Toggle airpods listening mode
                 [:8 :!COST8]                ; Toggle spatial-audio mode
                 [:right_command :!COTS4]    ; Search query in Notion
                 [:spacebar :!COS0]          ; Search window in contexts
                 [:q :!CO0]                  ; Switch Audio Output
                 [:w :!CSOhyphen]            ; Switch Audio Input
                 [:e :!CTOe]                 ; Show Reminders in Raycast
                 [:o :!COS0]                 ; Search window in contexts
                 [:f :!CSOTf]                ; Invoke macVIM
                 [:d :!CSOTj]                ; Invoke macVIM scroll mode
                 [:f12 :!CO0]                ; Show sound outputs
                 [:s :!CTOp]                 ; Invoke Sip Colour Picker
                 [:p :!CTSO0]                ; Invoke Paletro
                 [:tab :!COS0]               ; Invoke Contexts Window Search
                 [:period [:toggle-tiling-wm]]
                 [:s [:semicolon :w :q :return_or_enter]]]}

        {:des "Right Shift mode"
         :rules [:rshift-mode
                 [:j :!CSOTj]                ; Invoke macVIM scroll mode
                 [:m [:run-shortcut "Meeting Mode"]]
                 [:s [:run-shortcut "Screen Sharing Mode"]]
                 [:spacebar [:run-shortcut "Review focus"]]]}

        {:des "Fn mode"
         :rules [:fn-mode
                 [:i :!TOSi]
                 [:u :!TOSu]
                 [:y :!TOSy]
                 [:k :!TOSk]
                 [:g :!TOSg]
                 [:j :!TOSj]
                 [:h :!TOSh]
                 [:e :!TOSe]
                 [:left_arrow :!TOleft_arrow]
                 [:k :up_arrow]]}

        {:des "Custom Application Launcher"
         :rules [[:!CTj [:togg "Ivory"]]
                 [:!CTk [:toggle-ide-by-preferred-order]]
                 [:!CTl [:togg "Safari"]]
                 [:!CTperiod [:toggle-tiling-wm]]
                 [:!CTSl [:togg "Arc"]]
                 [:!CTa [:togg "Things3"]]
                 [:!CTquote [:togg "Music"]]
                 [:!CTw [:togg "Whatsapp"]]
                 [:!CSTe [:togg "Fantastical"]]
                 [:!CTs [:togg "Slack"]]
                 [:!CTsemicolon [:togg "Notion"]]
                 [:!CTSsemicolon [:togg "Webstorm"]]
                 [:!CTh [:togg "Alacritty"]]]}

        {:des "Use function keys as function keys on IDEA"
         :rules [:IDEA
                 [:##f1 :f1]
                 [:##f2 :f2]
                 [:##f3 :f3]
                 [:##f4 :f4]
                 [:##f5 :f5]
                 [:##f6 :f6]
                 [:##f7 :f7]
                 [:##f8 :f8]
                 [:##f9 :f9]
                 [:##f10 :f10]
                 [:##f11 :f11]
                 [:##f12 :f12]]}

        {:des "Use function keys as function keys on Playwright"
         :rules [:playwright
                 [:##f1 :f1]
                 [:##f2 :f2]
                 [:##f3 :f3]
                 [:##f4 :f4]
                 [:##f5 :f5]
                 [:##f6 :f6]
                 [:##f7 :f7]
                 [:##f8 :f8]
                 [:##f9 :f9]
                 [:##f10 :f10]
                 [:##f11 :f11]
                 [:##f12 :f12]]}

        {:des "Use Function Keys as regular media keys"
         :rules [[:f1 :apple_display_brightness_decrement]
                 [:f2 :apple_display_brightness_increment]
                 [:f4 :f19] ; spotlight
                 [:f5 :dictation]
                 [:f6 :f13] [:f3 :mission_control]
                 ; Do not disturb
                 [:f7 :rewind]
                 [:f8 :play_or_pause]
                 [:f9 :fastforward]
                 [:f10 :mute]
                 [:f11 :volume_decrement]
                 [:f12 :volume_increment]]}]}


